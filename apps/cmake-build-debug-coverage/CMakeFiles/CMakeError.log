The C compiler identification could not be found in "/wrk3/simploce/pt-cgmd/apps/cmake-build-debug-coverage/CMakeFiles/3.20.2/CompilerIdC/CMakeCCompilerId.gcno"

The CXX compiler identification could not be found in "/wrk3/simploce/pt-cgmd/apps/cmake-build-debug-coverage/CMakeFiles/3.20.2/CompilerIdCXX/CMakeCXXCompilerId.gcno"

Performing C SOURCE FILE Test CMAKE_HAVE_LIBC_PTHREAD failed with the following output:
Change Dir: /wrk3/simploce/pt-cgmd/apps/cmake-build-debug-coverage/CMakeFiles/CMakeTmp

Run Build Command(s):/usr/bin/make -f Makefile cmTC_d143a/fast && /usr/bin/make  -f CMakeFiles/cmTC_d143a.dir/build.make CMakeFiles/cmTC_d143a.dir/build
make[1]: Entering directory '/wrk3/simploce/pt-cgmd/apps/cmake-build-debug-coverage/CMakeFiles/CMakeTmp'
Building C object CMakeFiles/cmTC_d143a.dir/src.c.o
/usr/bin/cc -DCMAKE_HAVE_LIBC_PTHREAD  --coverage  -o CMakeFiles/cmTC_d143a.dir/src.c.o -c /wrk3/simploce/pt-cgmd/apps/cmake-build-debug-coverage/CMakeFiles/CMakeTmp/src.c
Linking C executable cmTC_d143a
/localdisk/clion-2021.2.3/bin/cmake/linux/bin/cmake -E cmake_link_script CMakeFiles/cmTC_d143a.dir/link.txt --verbose=1
/usr/bin/cc --coverage  CMakeFiles/cmTC_d143a.dir/src.c.o -o cmTC_d143a 
CMakeFiles/cmTC_d143a.dir/src.c.o: In function `main':
src.c:(.text+0x62): undefined reference to `pthread_create'
src.c:(.text+0x80): undefined reference to `pthread_detach'
src.c:(.text+0x9e): undefined reference to `pthread_cancel'
src.c:(.text+0xc1): undefined reference to `pthread_join'
src.c:(.text+0xe7): undefined reference to `pthread_atfork'
collect2: error: ld returned 1 exit status
CMakeFiles/cmTC_d143a.dir/build.make:98: recipe for target 'cmTC_d143a' failed
make[1]: *** [cmTC_d143a] Error 1
make[1]: Leaving directory '/wrk3/simploce/pt-cgmd/apps/cmake-build-debug-coverage/CMakeFiles/CMakeTmp'
Makefile:127: recipe for target 'cmTC_d143a/fast' failed
make: *** [cmTC_d143a/fast] Error 2


Source file was:
#include <pthread.h>

static void* test_func(void* data)
{
  return data;
}

int main(void)
{
  pthread_t thread;
  pthread_create(&thread, NULL, test_func, NULL);
  pthread_detach(thread);
  pthread_cancel(thread);
  pthread_join(thread, NULL);
  pthread_atfork(NULL, NULL, NULL);
  pthread_exit(NULL);

  return 0;
}

